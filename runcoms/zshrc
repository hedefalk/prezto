#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#   Viktor Hedefalk <hedefalk@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# So git HEAD^ works
unsetopt nomatch

# itermocil autocompletion https://github.com/TomAnthony/itermocil
compctl -g '~/.teamocil/*(:t:r)' itermocil

# dotfiles alias
alias dotfiles='git --git-dir=$HOME/dotfiles-bare --work-tree=$HOME'

# Don't share history between tabs/panes
setopt nosharehistory

# Weird default rm -i that I just can't handle for now
unalias rm

# Maven
export MAVEN_OPTS="-Xmx2048m -Xms768m"

# Generella alias
alias ll='ls -lFhaG' # G för färg
whosonport () { lsof -i :$*; } # lsof -i :8080
pidonport (){ lsof -i :$* | awk 'NR!=1 {print $2}'; }

# Pass location
export PASSWORD_STORE_DIR=$HOME/Dropbox/security/password-store

# Home bin
export PATH=$PATH:~/bin
# bins i dropbox
export PATH=$PATH:~/Dropbox/bin

# SBT
alias rsbt='SBT_OPTS="-XX:MaxPermSize=256m -noverify -javaagent:/Users/viktor/Dropbox/jrebel/jrebel.jar" sbt'
alias rxsbt='JAVA_OPTS="-XX:MaxPermSize=512m -Drebel.lift_plugin=true -noverify" xsbt -J-javaagent:/Users/viktor/Dropbox/jrebel/jrebel.jar'

# Setup docker env for default machine
#eval "$(docker-machine env default)"

###-begin-npm-completion-###
#
# npm command completion script
#
# Installation: npm completion >> ~/.bashrc  (or ~/.zshrc)
# Or, maybe: npm completion > /usr/local/etc/bash_completion.d/npm
#

if type complete &>/dev/null; then
  _npm_completion () {
    local words cword
    if type _get_comp_words_by_ref &>/dev/null; then
      _get_comp_words_by_ref -n = -n @ -w words -i cword
    else
      cword="$COMP_CWORD"
      words=("${COMP_WORDS[@]}")
    fi

    local si="$IFS"
    IFS=$'\n' COMPREPLY=($(COMP_CWORD="$cword" \
                           COMP_LINE="$COMP_LINE" \
                           COMP_POINT="$COMP_POINT" \
                           npm completion -- "${words[@]}" \
                           2>/dev/null)) || return $?
    IFS="$si"
  }
  complete -o default -F _npm_completion npm
elif type compdef &>/dev/null; then
  _npm_completion() {
    local si=$IFS
    compadd -- $(COMP_CWORD=$((CURRENT-1)) \
                 COMP_LINE=$BUFFER \
                 COMP_POINT=0 \
                 npm completion -- "${words[@]}" \
                 2>/dev/null)
    IFS=$si
  }
  compdef _npm_completion npm
elif type compctl &>/dev/null; then
  _npm_completion () {
    local cword line point words si
    read -Ac words
    read -cn cword
    let cword-=1
    read -l line
    read -ln point
    si="$IFS"
    IFS=$'\n' reply=($(COMP_CWORD="$cword" \
                       COMP_LINE="$line" \
                       COMP_POINT="$point" \
                       npm completion -- "${words[@]}" \
                       2>/dev/null)) || return $?
    IFS="$si"
  }
  compctl -K _npm_completion npm
fi
###-end-npm-completion-###

# added by travis gem
[ -f /Users/viktor/.travis/travis.sh ] && source /Users/viktor/.travis/travis.sh

export NVM_DIR="/Users/viktor/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm

# The next line updates PATH for the Google Cloud SDK.
source '/Users/viktor/Downloads/google-cloud-sdk/path.zsh.inc'

# The next line enables shell command completion for gcloud.
source '/Users/viktor/Downloads/google-cloud-sdk/completion.zsh.inc'
